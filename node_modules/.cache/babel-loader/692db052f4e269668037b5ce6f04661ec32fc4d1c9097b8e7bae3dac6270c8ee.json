{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/Projects/ticktime.firebase/react-firebase-test04/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"./components/auth\";\nimport { db, auth, storage } from \"./config/firebase\";\nimport { getDocs, collection, addDoc, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n\n  // New movie States\n  const [newMovieTitle, setNewMovieTitle] = useState(\"\");\n  const [newReleaseDate, setNewReleaseDate] = useState(0);\n  const [newReceivedAnOscar, setNewReceivedAnOscar] = useState(false);\n\n  // Update Title State\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n\n  // File Upload State\n  const [fileUpload, setFileUpload] = useState;\n  const moviesCollectionRef = collection(db, \"movies\");\n  const getMovieList = async () => {\n    try {\n      const data = await getDocs(moviesCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setMovieList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteMovie = async id => {\n    try {\n      const movieDoc = doc(db, \"movies\", id);\n      await deleteDoc(movieDoc);\n      getMovieList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const updatesMovieTitle = async id => {\n    try {\n      const movieDoc = doc(db, \"movies\", id);\n      await updateDoc(movieDoc, {\n        title: updatedTitle\n      });\n      getMovieList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getMovieList();\n  }, []);\n  const onSubmitMovie = async () => {\n    try {\n      var _auth$currentUser;\n      await addDoc(moviesCollectionRef, {\n        title: newMovieTitle,\n        releaseDate: newReleaseDate,\n        receivedAnOscar: newReceivedAnOscar,\n        userId: auth === null || auth === void 0 ? void 0 : (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid\n      });\n      getMovieList();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const uploadFile = async () => {\n    try {\n      if (!fileUpload) return;\n      const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Movie title...\",\n          onChange: e => setNewMovieTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Release Date...\",\n          onChange: e => setNewReleaseDate(Number(e.target.value)),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: newReceivedAnOscar,\n          onChange: e => setNewReceivedAnOscar(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Received an Oscar \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSubmitMovie,\n          children: \"Submit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movieList.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: movie.receivedAnOscar ? \"green\" : \"red\"\n            },\n            children: [\" \", movie.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Date: \", movie.releaseDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteMovie(movie.id),\n            children: \" Delete Movie \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"new title...\",\n            onChange: e => setUpdatedTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatesMovieTitle(movie.id),\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFileUpload(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"ft9CvJFI4AWwvMPiyAIIopjUnTs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","doc","updateDoc","ref","uploadBytes","jsxDEV","_jsxDEV","App","_s","movieList","setMovieList","newMovieTitle","setNewMovieTitle","newReleaseDate","setNewReleaseDate","newReceivedAnOscar","setNewReceivedAnOscar","updatedTitle","setUpdatedTitle","fileUpload","setFileUpload","moviesCollectionRef","getMovieList","data","filteredData","docs","map","id","err","console","error","deleteMovie","movieDoc","updatesMovieTitle","title","onSubmitMovie","_auth$currentUser","releaseDate","receivedAnOscar","userId","currentUser","uid","uploadFile","filesFolderRef","name","children","classname","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","Number","type","checked","onClick","movie","style","color","files","_c","$RefreshReg$"],"sources":["/Users/kevin/Documents/Projects/ticktime.firebase/react-firebase-test04/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {Auth} from \"./components/auth\";\nimport {db, auth, storage} from \"./config/firebase\";\nimport {getDocs, collection, addDoc, deleteDoc, doc, updateDoc} from \"firebase/firestore\";\nimport {ref, uploadBytes} from \"firebase/storage\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([])\n\n  // New movie States\n  const [newMovieTitle, setNewMovieTitle] = useState(\"\")\n  const [newReleaseDate, setNewReleaseDate] = useState(0)\n  const [newReceivedAnOscar, setNewReceivedAnOscar] = useState(false)\n\n  // Update Title State\n  const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n  // File Upload State\n  const [fileUpload, setFileUpload]= useState\n\n  const moviesCollectionRef = collection(db, \"movies\");\n  \n  const getMovieList = async() => {\n    try{\n      const data = await getDocs(moviesCollectionRef);\n      const filteredData = data.docs.map((doc)=> ({...doc.data(), id:doc.id,}));\n      setMovieList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteMovie = async (id) => {\n    try{\n      const movieDoc = doc(db, \"movies\", id);\n      await deleteDoc(movieDoc);\n      getMovieList();\n    }catch (err) {\n      console.error(err);\n    }\n  } \n\n  const updatesMovieTitle = async (id) => {\n    try{\n      const movieDoc = doc(db, \"movies\", id);\n      await updateDoc(movieDoc, {title:updatedTitle});\n      getMovieList();\n    }catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect (()=> {\n\n    getMovieList();\n  }, []);\n  \n  const onSubmitMovie = async () => {\n    try {\n      await addDoc(moviesCollectionRef, {\n        title: newMovieTitle, \n        releaseDate:newReleaseDate, \n        receivedAnOscar: newReceivedAnOscar,\n        userId: auth?.currentUser?.uid\n      });\n\n      getMovieList();\n    }  catch (err) {\n      console.error(err);\n    }\n  }\n\n  const uploadFile = async () => {\n    try {\n      if (!fileUpload) return;\n      const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`)\n\n      \n    } catch (err)\n    {\n      console.error(err);\n    }\n  }\n\n  return (\n      <center>\n        <div classname=\"App\">\n          <Auth/>\n          <br/>\n          <div>\n            <input placeholder=\"Movie title...\" onChange={(e)=> setNewMovieTitle(e.target.value)}/>\n            <input placeholder=\"Release Date...\" onChange={(e)=> setNewReleaseDate(Number(e.target.value))} type=\"number\"/>\n            <input type=\"checkbox\" checked={newReceivedAnOscar} onChange={(e)=> setNewReceivedAnOscar(e.target.checked)} />\n            <label>Received an Oscar </label>\n            <button onClick={onSubmitMovie}>Submit Movie</button>\n          </div><br/>\n          <div>\n            {movieList.map((movie)=> (\n              <div>\n                <h1 style={{color:movie.receivedAnOscar?\"green\":\"red\"}}> {movie.title} </h1>\n                <p> Date: {movie.releaseDate} </p>\n\n                <button onClick={()=> deleteMovie(movie.id)}> Delete Movie </button>\n                <input placeholder=\"new title...\" onChange={(e) => setUpdatedTitle(e.target.value)}/>\n                <button onClick={()=> updatesMovieTitle(movie.id)}> Update</button>\n                </div>\n            ))}\n          </div>\n          <div>\n            <input type=\"file\" onChange={(e)=>setFileUpload(e.target.files[0])}/>\n            <button onClick={uploadFile}>Upload File</button>\n          </div>\n        </div>\n      </center>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useEffect,useState}from\"react\";import\"./App.css\";import{Auth}from\"./components/auth\";import{db,auth,storage}from\"./config/firebase\";import{getDocs,collection,addDoc,deleteDoc,doc,updateDoc}from\"firebase/firestore\";import{ref,uploadBytes}from\"firebase/storage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[movieList,setMovieList]=useState([]);// New movie States\nconst[newMovieTitle,setNewMovieTitle]=useState(\"\");const[newReleaseDate,setNewReleaseDate]=useState(0);const[newReceivedAnOscar,setNewReceivedAnOscar]=useState(false);// Update Title State\nconst[updatedTitle,setUpdatedTitle]=useState(\"\");// File Upload State\nconst[fileUpload,setFileUpload]=useState(null);const moviesCollectionRef=collection(db,\"movies\");const getMovieList=async()=>{try{const data=await getDocs(moviesCollectionRef);const filteredData=data.docs.map(doc=>({...doc.data(),id:doc.id}));setMovieList(filteredData);}catch(err){console.error(err);}};const deleteMovie=async id=>{try{const movieDoc=doc(db,\"movies\",id);await deleteDoc(movieDoc);getMovieList();}catch(err){console.error(err);}};const updatesMovieTitle=async id=>{try{const movieDoc=doc(db,\"movies\",id);await updateDoc(movieDoc,{title:updatedTitle});getMovieList();}catch(err){console.error(err);}};useEffect(()=>{getMovieList();},[]);const onSubmitMovie=async()=>{try{var _auth$currentUser;await addDoc(moviesCollectionRef,{title:newMovieTitle,releaseDate:newReleaseDate,receivedAnOscar:newReceivedAnOscar,userId:auth===null||auth===void 0?void 0:(_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.uid});getMovieList();}catch(err){console.error(err);}};const uploadFile=async()=>{try{if(!fileUpload)return;const filesFolderRef=ref(storage,\"projectFiles/\".concat(fileUpload.name));await uploadBytes(filesFolderRef,fileUpload);}catch(err){console.error(err);}};return/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsxs(\"div\",{classname:\"App\",children:[/*#__PURE__*/_jsx(Auth,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Movie title...\",onChange:e=>setNewMovieTitle(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Release Date...\",onChange:e=>setNewReleaseDate(Number(e.target.value)),type:\"number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:newReceivedAnOscar,onChange:e=>setNewReceivedAnOscar(e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{children:\"Received an Oscar \"}),/*#__PURE__*/_jsx(\"button\",{onClick:onSubmitMovie,children:\"Submit Movie\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:movieList.map(movie=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{style:{color:movie.receivedAnOscar?\"green\":\"red\"},children:[\" \",movie.title,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Date: \",movie.releaseDate,\" \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteMovie(movie.id),children:\" Delete Movie \"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"new title...\",onChange:e=>setUpdatedTitle(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updatesMovieTitle(movie.id),children:\" Update\"})]}))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setFileUpload(e.target.files[0])}),/*#__PURE__*/_jsx(\"button\",{onClick:uploadFile,children:\"Upload File\"})]})]})});}export default App;","map":{"version":3,"names":["useEffect","useState","Auth","db","auth","storage","getDocs","collection","addDoc","deleteDoc","doc","updateDoc","ref","uploadBytes","jsx","_jsx","jsxs","_jsxs","App","movieList","setMovieList","newMovieTitle","setNewMovieTitle","newReleaseDate","setNewReleaseDate","newReceivedAnOscar","setNewReceivedAnOscar","updatedTitle","setUpdatedTitle","fileUpload","setFileUpload","moviesCollectionRef","getMovieList","data","filteredData","docs","map","id","err","console","error","deleteMovie","movieDoc","updatesMovieTitle","title","onSubmitMovie","_auth$currentUser","releaseDate","receivedAnOscar","userId","currentUser","uid","uploadFile","filesFolderRef","concat","name","children","classname","placeholder","onChange","e","target","value","Number","type","checked","onClick","movie","style","color","files"],"sources":["/Users/kevin/Documents/Projects/ticktime.firebase/react-firebase-test04/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {Auth} from \"./components/auth\";\nimport {db, auth, storage} from \"./config/firebase\";\nimport {getDocs, collection, addDoc, deleteDoc, doc, updateDoc} from \"firebase/firestore\";\nimport {ref, uploadBytes} from \"firebase/storage\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([])\n\n  // New movie States\n  const [newMovieTitle, setNewMovieTitle] = useState(\"\")\n  const [newReleaseDate, setNewReleaseDate] = useState(0)\n  const [newReceivedAnOscar, setNewReceivedAnOscar] = useState(false)\n\n  // Update Title State\n  const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n  // File Upload State\n  const [fileUpload, setFileUpload]= useState(null)\n\n  const moviesCollectionRef = collection(db, \"movies\");\n  \n  const getMovieList = async() => {\n    try{\n      const data = await getDocs(moviesCollectionRef);\n      const filteredData = data.docs.map((doc)=> ({...doc.data(), id:doc.id,}));\n      setMovieList(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteMovie = async (id) => {\n    try{\n      const movieDoc = doc(db, \"movies\", id);\n      await deleteDoc(movieDoc);\n      getMovieList();\n    }catch (err) {\n      console.error(err);\n    }\n  } \n\n  const updatesMovieTitle = async (id) => {\n    try{\n      const movieDoc = doc(db, \"movies\", id);\n      await updateDoc(movieDoc, {title:updatedTitle});\n      getMovieList();\n    }catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect (()=> {\n\n    getMovieList();\n  }, []);\n  \n  const onSubmitMovie = async () => {\n    try {\n      await addDoc(moviesCollectionRef, {\n        title: newMovieTitle, \n        releaseDate:newReleaseDate, \n        receivedAnOscar: newReceivedAnOscar,\n        userId: auth?.currentUser?.uid\n      });\n\n      getMovieList();\n    }  catch (err) {\n      console.error(err);\n    }\n  }\n\n  const uploadFile = async () => {\n    try {\n      if (!fileUpload) return;\n      const filesFolderRef = ref(storage, `projectFiles/${fileUpload.name}`)\n      await uploadBytes(filesFolderRef, fileUpload);\n      \n    } catch (err)\n    {\n      console.error(err);\n    }\n  }\n\n  return (\n      <center>\n        <div classname=\"App\">\n          <Auth/>\n          <br/>\n          <div>\n            <input placeholder=\"Movie title...\" onChange={(e)=> setNewMovieTitle(e.target.value)}/>\n            <input placeholder=\"Release Date...\" onChange={(e)=> setNewReleaseDate(Number(e.target.value))} type=\"number\"/>\n            <input type=\"checkbox\" checked={newReceivedAnOscar} onChange={(e)=> setNewReceivedAnOscar(e.target.checked)} />\n            <label>Received an Oscar </label>\n            <button onClick={onSubmitMovie}>Submit Movie</button>\n          </div><br/>\n          <div>\n            {movieList.map((movie)=> (\n              <div>\n                <h1 style={{color:movie.receivedAnOscar?\"green\":\"red\"}}> {movie.title} </h1>\n                <p> Date: {movie.releaseDate} </p>\n\n                <button onClick={()=> deleteMovie(movie.id)}> Delete Movie </button>\n                <input placeholder=\"new title...\" onChange={(e) => setUpdatedTitle(e.target.value)}/>\n                <button onClick={()=> updatesMovieTitle(movie.id)}> Update</button>\n                </div>\n            ))}\n          </div>\n          <div>\n            <input type=\"file\" onChange={(e)=>setFileUpload(e.target.files[0])}/>\n            <button onClick={uploadFile}>Upload File</button>\n          </div>\n        </div>\n      </center>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}